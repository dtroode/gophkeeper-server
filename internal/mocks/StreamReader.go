// Code generated by mockery v2.52.3. DO NOT EDIT.

package mocks

import (
	model "github.com/dtroode/gophkeeper-server/internal/model"
	mock "github.com/stretchr/testify/mock"
)

// StreamReader is an autogenerated mock type for the StreamReader type
type StreamReader struct {
	mock.Mock
}

// Recv provides a mock function with no fields
func (_m *StreamReader) Recv() (*model.CreateRecordStreamRequest, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Recv")
	}

	var r0 *model.CreateRecordStreamRequest
	var r1 error
	if rf, ok := ret.Get(0).(func() (*model.CreateRecordStreamRequest, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() *model.CreateRecordStreamRequest); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.CreateRecordStreamRequest)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewStreamReader creates a new instance of StreamReader. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewStreamReader(t interface {
	mock.TestingT
	Cleanup(func())
}) *StreamReader {
	mock := &StreamReader{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
